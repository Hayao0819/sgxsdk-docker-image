name: Multi-OS Docker Build and Push to GHCR

on:
  push:
    branches:
      - main # mainブランチへのプッシュで実行

env:
  REGISTRY: ghcr.io
  # イメージ名は <OWNER>/<REPOSITORY> の形式
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    # OS_CODE_NAME のマトリックスを設定
    strategy:
      matrix:
        os_code_name: [noble, jammy] # noble と jammy の両方でジョブを実行

    runs-on: ubuntu-latest

    # GHCRへのパッケージ書き込み権限とコンテンツ読み取り権限を設定
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # OSコードネーム（nobleまたはjammy）をタグとして使用
            type=raw,value=${{ matrix.os_code_name }}
            # 例: noble-latest や jammy-latest のようにしたい場合
            type=raw,value=${{ matrix.os_code_name }}-latest,enable={{is_default_branch}}
            # OSコードネームとコミットSHAを組み合わせたタグ
            type=raw,value=${{ matrix.os_code_name }}-{{sha}}

      - name: Build and push Docker image for ${{ matrix.os_code_name }}
        uses: docker/build-push-action@v5
        with:
          context: ./ubuntu # Dockerfileが存在するディレクトリのパス
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build-arg で OS_CODE_NAME を渡す
          build-args: |
            OS_CODE_NAME=${{ matrix.os_code_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
